
R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "MPkn"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('MPkn')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("MPKlMatrix")
> ### * MPKlMatrix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: MPKlMatrix
> ### Title: Creates a matrix of specified row of output 'MUPkLo'
> ### Aliases: MPKlMatrix
> ### Keywords: MPKlMatrix
> 
> ### ** Examples
> 
> A <- array(c(0.9, 0.6, 0.8, 0.05, 0.2, 0.05, 0.05, 0.2, 0.15), c(3, 3))
> P <- array(c(0.9, 0.6, 0.8, 0.05, 0.2, 0.05, 0.05, 0.2, 0.15), c(3, 3))
> U <- array(c(0.8, 0.8, 0.7, 0.06, 0.02, 0.2, 0.14, 0.18, 0.1), c(3, 3))
> sta <- c(1, 2, 3)
> k <- c(1, 0, 1, 0)
> n <- c(5, 7, 12, 17)
> Mx <- MUPkLo(A, P, U, n, k, sta)
> M100 = MPKlMatrix(Mx, step = 100, nc = 3, sta = c(1, 2, 3))
> 
> 
> 
> cleanEx()
> nameEx("MPkn-package")
> ### * MPkn-package
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: MPkn-package
> ### Title: Calculations of One Discrete Model in Several Time Steps
> ### Aliases: MPkn-package
> 
> ### ** Examples
> 
> require(MPkn)
> require(markovchain)
Loading required package: markovchain
Warning in library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called 'markovchain'
> options(digits = 14)
> n = 12
> k = 2
> rz = 11
> P = array(0, c(rz, rz))
> for (i in 1:rz){
+   po = runif(rz)
+   P[i, ] = po/sum(po)
+ }
> I = diag(1, rz, rz)
> Myy = MUPkL(P, P, I, n, k, c(1:rz))
> StSy = NULL
> for (i in 1:rz) StSy = c(StSy, Myy$Navg[,,i][n])
> mrkv = new("markovchain", transitionMatrix = P)
Error in getClass(Class, where = topenv(parent.frame())) : 
  "markovchain" is not a defined class
Calls: new -> getClass
Execution halted
